<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8">
    <title> Pie 0008 </title>
</head>
<body>



    <h3>  Pie 0008  </h3>

    <p>
    千层饼
    </p>


    


    <!--Step:1 为ECharts准备一个具备大小（宽高）的Dom-->
    <!-- 为ECharts准备一个具备大小（宽高）的Dom -->
    <div id="main" style="height:400px"></div>



    <div id="wrong-message"></div>



    <!--Step:2 引入echarts.js-->
    <!-- ECharts单文件引入 -->
    <script src="/js/echarts.js" type="text/javascript"></script>




    <script type="text/javascript">

        var idx = 1;




        // Step:3 为模块加载器配置echarts的路径，从当前页面链接到echarts.js，定义所需图表路径
        // 路径配置
        require.config({
            paths: {
                echarts: '/js'
            }
        });



        // Step:4 动态加载echarts然后在回调函数中开始使用，注意保持按需加载结构定义图表路径
        // 使用
        require(
            [
                'echarts',
                'echarts/chart/pie', // 使用饼图就加载pie模块，按需加载

                'echarts/chart/funnel'      // 漏斗图切换时使用.
            ],
            function (ec) {
                // 基于准备好的dom，初始化echarts图表
                var myChart = ec.init(document.getElementById('main'));

                var option = {
                    title: {
                        text: '浏览器占比变化',
                        subtext: '纯属虚构',
                        x: 'right',
                        y: 'bottom'
                    },
                    tooltip: {
                        trigger: 'item',
                        formatter: "{a} <br/>{b} : {c} ({d}%)"
                    },
                    legend: {
                        orient: 'vertical',
                        x: 'left',
                        data: ['Chrome', 'Firefox', 'Safari', 'IE9+', 'IE8-']
                    },
                    toolbox: {
                        show: true,
                        feature: {
                            mark: { show: true },
                            dataView: { show: true, readOnly: false },
                            restore: { show: true },
                            saveAsImage: { show: true }
                        }
                    },
                    calculable: false,
                    series: (function () {
                        var series = [];
                        for (var i = 0; i < 30; i++) {
                            series.push({
                                name: '浏览器（数据纯属虚构）',
                                type: 'pie',
                                itemStyle: { normal: {
                                    label: { show: i > 28 },
                                    labelLine: { show: i > 28, length: 20 }
                                }
                                },
                                radius: [i * 4 + 40, i * 4 + 43],
                                data: [
                                    { value: i * 128 + 80, name: 'Chrome' },
                                    { value: i * 64 + 160, name: 'Firefox' },
                                    { value: i * 32 + 320, name: 'Safari' },
                                    { value: i * 16 + 640, name: 'IE9+' },
                                    { value: i * 8 + 1280, name: 'IE8-' }
                                ]
                            })
                        }
                        series[0].markPoint = {
                            symbol: 'emptyCircle',
                            symbolSize: series[0].radius[0],
                            effect: { show: true, scaleSize: 12, color: 'rgba(250,225,50,0.8)', shadowBlur: 10, period: 30 },
                            data: [{ x: '50%', y: '50%'}]
                        };
                        return series;
                    })()
                };

                // 为echarts对象加载数据 
                myChart.setOption(option);




                setTimeout(function () {
                    var _ZR = myChart.getZrender();
                    var TextShape = require('zrender/shape/Text');
                    // 补充千层饼
                    _ZR.addShape(new TextShape({
                        style: {
                            x: _ZR.getWidth() / 2,
                            y: _ZR.getHeight() / 2,
                            color: '#666',
                            text: '恶梦的过去',
                            textAlign: 'center'
                        }
                    }));
                    _ZR.addShape(new TextShape({
                        style: {
                            x: _ZR.getWidth() / 2 + 200,
                            y: _ZR.getHeight() / 2,
                            brushType: 'fill',
                            color: 'orange',
                            text: '美好的未来',
                            textAlign: 'left',
                            textFont: 'normal 20px 微软雅黑'
                        }
                    }));
                    _ZR.refresh();
                }, 2000);


            }
        );



        


    </script>

</body>
</html>
