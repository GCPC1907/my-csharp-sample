<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8">
    <title>  Scatter 0002</title>
</head>
<body>



    <h3>  Scatter 0002  </h3>

    <p>
    标准气泡图
    </p>


    


    <!--Step:1 为ECharts准备一个具备大小（宽高）的Dom-->
    <!-- 为ECharts准备一个具备大小（宽高）的Dom -->
    <div id="main" style="height:400px"></div>



    <!--Step:2 引入echarts.js-->
    <!-- ECharts单文件引入 -->
    <script src="/js/echarts.js" type="text/javascript"></script>




    <script type="text/javascript">


        function random() {
            var r = Math.round(Math.random() * 100);
            return (r * (r % 2 == 0 ? 1 : -1));
        }

        function randomDataArray() {
            var d = [];
            var len = 100;
            while (len--) {
                d.push([
                    random(),
                    random(),
                    Math.abs(random()),
                ]);
            }
            return d;
        }




        // Step:3 为模块加载器配置echarts的路径，从当前页面链接到echarts.js，定义所需图表路径
        // 路径配置
        require.config({
            paths: {
                echarts: '/js'
            }
        });



        // Step:4 动态加载echarts然后在回调函数中开始使用，注意保持按需加载结构定义图表路径
        // 使用
        require(
            [
                'echarts',
                'echarts/chart/scatter' // 使用散点图就加载scatter模块，按需加载
            ],
            function (ec) {
                // 基于准备好的dom，初始化echarts图表
                var myChart = ec.init(document.getElementById('main'));

                var option = {
                    tooltip: {
                        trigger: 'axis',
                        showDelay: 0,
                        axisPointer: {
                            type: 'cross',
                            lineStyle: {
                                type: 'dashed',
                                width: 1
                            }
                        }
                    },
                    legend: {
                        data: ['scatter1', 'scatter2']
                    },
                    toolbox: {
                        show: true,
                        feature: {
                            mark: { show: true },
                            dataZoom: { show: true },
                            dataView: { show: true, readOnly: false },
                            restore: { show: true },
                            saveAsImage: { show: true }
                        }
                    },
                    xAxis: [
                        {
                            type: 'value',
                            splitNumber: 4,
                            scale: true
                        }
                    ],
                    yAxis: [
                        {
                            type: 'value',
                            splitNumber: 4,
                            scale: true
                        }
                    ],
                    series: [
                        {
                            name: 'scatter1',
                            type: 'scatter',
                            symbolSize: function (value) {
                                return Math.round(value[2] / 5);
                            },
                            data: randomDataArray()
                        },
                        {
                            name: 'scatter2',
                            type: 'scatter',
                            symbolSize: function (value) {
                                return Math.round(value[2] / 5);
                            },
                            data: randomDataArray()
                        }
                    ]
                };

                // 为echarts对象加载数据 
                myChart.setOption(option);
            }
        );






    </script>

</body>
</html>
